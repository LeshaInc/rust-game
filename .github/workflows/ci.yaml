name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  BINARY: rg_main
  NAME: rg
  CARGO_TERM_COLOR: always

jobs:
  # Build for Linux
  release-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-linux-${{ hashFiles('**/Cargo.toml') }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Install dependencies
        run: |
          sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu

      - name: Prepare package
        run: |
          mkdir ${{ env.NAME }}-linux-x64
          cp target/x86_64-unknown-linux-gnu/release/${{ env.BINARY }} ${{ env.NAME }}-linux-x64/${{ env.NAME }}
          cp -r assets ${{ env.NAME }}-linux-x64/

      - name: Package as a zip
        run: |
          zip -r ${{ env.NAME }}-linux-x64.zip ${{ env.NAME }}-linux-x64/

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.NAME }}-linux-x64.zip
          name: linux

  # Build for Windows
  release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-windows-${{ hashFiles('**/Cargo.toml') }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      - name: Prepare package
        run: |
          mkdir ${{ env.NAME }}-windows-x64
          cp target/x86_64-pc-windows-msvc/release/${{ env.BINARY }}.exe ${{ env.NAME }}-windows-x64/${{ env.NAME }}.exe
          cp -r assets ${{ env.NAME }}-windows-x64

      - name: Package as a zip
        run: |
          Compress-Archive -Path ${{ env.NAME }}-windows-x64/ -DestinationPath ${{ env.NAME}}-windows-x64.zip

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.NAME }}-windows-x64.zip
          name: windows
