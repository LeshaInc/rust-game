name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  BINARY: rg_main
  NAME: rg
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        target: [linux-x64, windows-x64]

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.genver.outputs.version }}

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-${{ matrix.target }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Install dependencies
        run: |
          sudo apt-get update; sudo apt-get install libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev mingw-w64 gcc-mingw-w64

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu

      - name: Generate version
        id: genver
        run: |
          (echo -n "version=" && git describe) > $GITHUB_OUTPUT

      - name: Build Linux x64
        if: matrix.target == 'linux-x64'
        run: |
          cargo build --profile production --target x86_64-unknown-linux-gnu

      - name: Build Windows x64
        if: matrix.target == 'windows-x64'
        run: |
          cargo build --profile production --target x86_64-pc-windows-gnu

      - name: Prepare package
        run: |
          mkdir ${{ env.NAME }}-${{ matrix.target }}
          cp target/x86_64-unknown-linux-gnu/production/${{ env.BINARY }}{,.exe} ${{ env.NAME }}-${{ matrix.target }}/${{ env.NAME }} ||:
          cp -r assets ${{ env.NAME }}-${{ matrix.target }}/

      - name: Package as a zip
        run: |
          zip -r ${{ env.NAME }}-${{ matrix.target }}.zip ${{ env.NAME }}-${{ matrix.target }}/

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.NAME }}-${{ matrix.target }}.zip
          name: ${{ matrix.target }}

  upload:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: linux-x64

    - uses: actions/download-artifact@v3
      with:
        name: windows-x64

    - name: Create repository
      run: |
        git config --global --add safe.directory $PWD
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git init
        git checkout -b master

    - name: Setup credentials
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        echo $PAT_TOKEN | base64
        git remote add origin https://LeshaInc:$PAT_TOKEN@github.com/LeshaInc/rust-game-releases

    - name: Commit files
      env:
        VERSION: ${{ needs.build.outputs.version }}
      run: |
        git add ${{ env.NAME }}-linux-x64.zip
        git add ${{ env.NAME }}-windows-x64.zip
        git commit -m $VERSION

    - run: |
        git push --set-upstream origin master --force
